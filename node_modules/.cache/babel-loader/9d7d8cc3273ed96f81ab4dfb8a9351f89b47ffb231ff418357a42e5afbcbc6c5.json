{"ast":null,"code":"var _jsxFileName = \"/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport reducer, { initialLoginState } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContextUser = /*#__PURE__*/createContext();\nexport const StoreContextUserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialLoginState);\n  const userLogin = (username, password) => {\n    const token = state.token;\n    console.log(token);\n    if (username && password) {\n      console.log('pippo');\n      dispatch({\n        type: 'login',\n        payload: token\n      });\n    }\n  };\n  const value = {\n    token: state.token,\n    userLogin\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContextUser.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }, this);\n};\n_s(StoreContextUserProvider, \"nWExC3rRX+obx4Ga+izcH7rIEZQ=\");\n_c = StoreContextUserProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextUserProvider\");","map":{"version":3,"names":["createContext","useReducer","reducer","initialLoginState","jsxDEV","_jsxDEV","StoreContextUser","StoreContextUserProvider","children","_s","state","dispatch","userLogin","username","password","token","console","log","type","payload","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js"],"sourcesContent":["import {createContext, useReducer} from \"react\";\nimport reducer,{initialLoginState} from \"./reducer\";\nexport const StoreContextUser = createContext()\nexport const StoreContextUserProvider = ({children}) => {\n  const [state,dispatch] = useReducer(reducer,initialLoginState);\n  const userLogin = (username,password) => {\n    const token = state.token\n    console.log(token)\n    if(username && password) {\n      console.log('pippo')\n      dispatch({\n        type: 'login',\n        payload: token\n      })\n    }\n  }\n\n\n\n\n  const value = {\n    token: state.token,\n    userLogin\n  }\n    return (\n     <StoreContextUser.Provider value={value}>\n       {children}\n     </StoreContextUser.Provider>\n    )\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,UAAU,QAAO,OAAO;AAC/C,OAAOC,OAAO,IAAEC,iBAAiB,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,OAAO,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAC/C,OAAO,MAAMO,wBAAwB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,UAAU,CAACC,OAAO,EAACC,iBAAiB,CAAC;EAC9D,MAAMS,SAAS,GAAGA,CAACC,QAAQ,EAACC,QAAQ,KAAK;IACvC,MAAMC,KAAK,GAAGL,KAAK,CAACK,KAAK;IACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAGF,QAAQ,IAAIC,QAAQ,EAAE;MACvBE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBN,QAAQ,CAAC;QACPO,IAAI,EAAE,OAAO;QACbC,OAAO,EAAEJ;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAKD,MAAMK,KAAK,GAAG;IACZL,KAAK,EAAEL,KAAK,CAACK,KAAK;IAClBH;EACF,CAAC;EACC,oBACCP,OAAA,CAACC,gBAAgB,CAACe,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EACrCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEjC,CAAC;AAAAhB,EAAA,CA1BYF,wBAAwB;AAAAmB,EAAA,GAAxBnB,wBAAwB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}