{"ast":null,"code":"var _jsxFileName = \"/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport reducer, { initialLoginState } from \"./reducer\";\nimport { authForm } from \"../Api/authForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContextUser = /*#__PURE__*/createContext();\nexport const StoreContextUserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialLoginState);\n  const userLogin = async (username, password) => {\n    try {\n      const req = await authForm(username, password);\n      const respToken = req.data;\n      console.log(respToken);\n      // Esegui la dispatch solo se il token è disponibile\n      if (respToken) {\n        console.log(respToken, 'si è resente');\n        dispatch({\n          type: 'login',\n          payload: respToken\n        });\n\n        // Altre azioni post-login, se necessarie\n      } else {\n        // Gestisci il caso in cui il token non è presente\n        console.error('Token non disponibile.');\n      }\n    } catch (error) {\n      // Gestisci l'errore qui, ad esempio loggandolo o mostrando un messaggio all'utente\n      console.error('Errore durante il login:', error);\n    } finally {\n      // Ripristina lo stato di caricamento, se necessario\n    }\n  };\n  const value = {\n    token: state.token,\n    userLogin\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContextUser.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 6\n  }, this);\n};\n_s(StoreContextUserProvider, \"nWExC3rRX+obx4Ga+izcH7rIEZQ=\");\n_c = StoreContextUserProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextUserProvider\");","map":{"version":3,"names":["createContext","useReducer","reducer","initialLoginState","authForm","jsxDEV","_jsxDEV","StoreContextUser","StoreContextUserProvider","children","_s","state","dispatch","userLogin","username","password","req","respToken","data","console","log","type","payload","error","value","token","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js"],"sourcesContent":["import {createContext, useReducer} from \"react\";\nimport reducer,{initialLoginState} from \"./reducer\";\nimport {authForm} from \"../Api/authForm\";\nexport const StoreContextUser = createContext()\nexport const StoreContextUserProvider = ({children}) => {\n  const [state,dispatch] = useReducer(reducer,initialLoginState);\n  const userLogin = async (username, password) => {\n    try {\n      const req = await authForm(username, password);\n      const respToken = req.data;\n      console.log(respToken)\n      // Esegui la dispatch solo se il token è disponibile\n      if (respToken) {\n        console.log(respToken,'si è resente')\n        dispatch({\n          type: 'login',\n          payload: respToken,\n        });\n\n        // Altre azioni post-login, se necessarie\n      } else {\n        // Gestisci il caso in cui il token non è presente\n        console.error('Token non disponibile.');\n      }\n    } catch (error) {\n      // Gestisci l'errore qui, ad esempio loggandolo o mostrando un messaggio all'utente\n      console.error('Errore durante il login:', error);\n    } finally {\n      // Ripristina lo stato di caricamento, se necessario\n    }\n  };\n\n\n\n\n\n  const value = {\n    token:state.token,\n    userLogin\n  }\n    return (\n     <StoreContextUser.Provider value={value}>\n       {children}\n     </StoreContextUser.Provider>\n    )\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,UAAU,QAAO,OAAO;AAC/C,OAAOC,OAAO,IAAEC,iBAAiB,QAAO,WAAW;AACnD,SAAQC,QAAQ,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,OAAO,MAAMC,gBAAgB,gBAAGP,aAAa,CAAC,CAAC;AAC/C,OAAO,MAAMQ,wBAAwB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGX,UAAU,CAACC,OAAO,EAACC,iBAAiB,CAAC;EAC9D,MAAMU,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,QAAQ,CAACU,QAAQ,EAAEC,QAAQ,CAAC;MAC9C,MAAME,SAAS,GAAGD,GAAG,CAACE,IAAI;MAC1BC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;MACtB;MACA,IAAIA,SAAS,EAAE;QACbE,OAAO,CAACC,GAAG,CAACH,SAAS,EAAC,cAAc,CAAC;QACrCL,QAAQ,CAAC;UACPS,IAAI,EAAE,OAAO;UACbC,OAAO,EAAEL;QACX,CAAC,CAAC;;QAEF;MACF,CAAC,MAAM;QACL;QACAE,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACR;IAAA;EAEJ,CAAC;EAMD,MAAMC,KAAK,GAAG;IACZC,KAAK,EAACd,KAAK,CAACc,KAAK;IACjBZ;EACF,CAAC;EACC,oBACCP,OAAA,CAACC,gBAAgB,CAACmB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAf,QAAA,EACrCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEjC,CAAC;AAAApB,EAAA,CAzCYF,wBAAwB;AAAAuB,EAAA,GAAxBvB,wBAAwB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}