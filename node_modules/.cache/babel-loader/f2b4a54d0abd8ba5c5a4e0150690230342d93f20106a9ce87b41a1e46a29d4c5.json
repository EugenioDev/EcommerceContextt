{"ast":null,"code":"var _jsxFileName = \"/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport reducer, { initialState } from \"./reducer\";\nimport { allProducts } from \"../Api/allProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContextUser = /*#__PURE__*/createContext();\nexport const StoreContextUserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const userToken = token => {\n    dispatch({\n      type: 'token',\n      payload: token\n    });\n  };\n  const isModalOpen = () => {\n    dispatch({\n      type: 'openModal',\n      payload: !state.open\n    });\n  };\n  const fetchProducts = async () => {\n    try {\n      // Effettua la chiamata API per ottenere i prodotti\n      const response = await allProducts(); // Assumi che getProducts sia una funzione reale per effettuare la chiamata API\n      const products = response.data; // Assumi che la risposta contenga i dati dei prodotti\n\n      // Dispatccha l'azione per popolare l'array nel reducer\n      dispatch({\n        type: 'setProducts',\n        payload: products\n      });\n    } catch (error) {\n      console.error('Errore nel recupero dei prodotti:', error);\n    }\n  };\n  const addToCartProd = product => {\n    const updateCart = state.products;\n    const isProductInCart = updateCart.find(el => el.id === product.id);\n    if (!isProductInCart) {\n      updateCart.push(product);\n      dispatch({\n        type: \"addToCartProduct\",\n        payload: updateCart\n      });\n    } else {\n      console.log('il prodotto è già presente nel carrello');\n    }\n  };\n  const value = {\n    token: state.token,\n    products: state.products,\n    open: state.open,\n    userToken,\n    isModalOpen,\n    addToCartProd,\n    fetchProducts\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContextUser.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 4\n  }, this);\n};\n_s(StoreContextUserProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StoreContextUserProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextUserProvider\");","map":{"version":3,"names":["createContext","useReducer","reducer","initialState","allProducts","jsxDEV","_jsxDEV","StoreContextUser","StoreContextUserProvider","children","_s","state","dispatch","userToken","token","type","payload","isModalOpen","open","fetchProducts","response","products","data","error","console","addToCartProd","product","updateCart","isProductInCart","find","el","id","push","log","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/geggiodev/Desktop/ReactPractice/shopping-ex/src/Contenxt/authContext.js"],"sourcesContent":["import {createContext, useReducer} from \"react\";\nimport reducer, {initialState} from \"./reducer\";\nimport {allProducts} from \"../Api/allProducts\";\n\n\nexport const StoreContextUser = createContext()\nexport const StoreContextUserProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const userToken = (token) => {\n    dispatch({\n      type: 'token',\n      payload: token\n    })\n  };\n\n  const isModalOpen = () => {\n    dispatch({\n      type: 'openModal',\n      payload: !state.open\n    });\n  }\n\n\n  const fetchProducts = async () => {\n    try {\n      // Effettua la chiamata API per ottenere i prodotti\n      const response = await allProducts(); // Assumi che getProducts sia una funzione reale per effettuare la chiamata API\n      const products = response.data; // Assumi che la risposta contenga i dati dei prodotti\n\n      // Dispatccha l'azione per popolare l'array nel reducer\n      dispatch({type: 'setProducts', payload: products});\n    } catch (error) {\n      console.error('Errore nel recupero dei prodotti:', error);\n    }\n  };\n\n  const addToCartProd = (product) => {\n    const updateCart = state.products\n    const isProductInCart = updateCart.find(el => el.id === product.id)\n    if (!isProductInCart) {\n      updateCart.push(product)\n      dispatch({\n        type: \"addToCartProduct\",\n        payload: updateCart,\n      });\n    } else {\n      console.log('il prodotto è già presente nel carrello')\n    }\n  }\n\n\n  const value = {\n    token: state.token,\n    products: state.products,\n    open: state.open,\n    userToken,\n    isModalOpen,\n    addToCartProd,\n    fetchProducts,\n\n  }\n  return (\n   <StoreContextUser.Provider value={value}>\n     {children}\n   </StoreContextUser.Provider>\n  )\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,UAAU,QAAO,OAAO;AAC/C,OAAOC,OAAO,IAAGC,YAAY,QAAO,WAAW;AAC/C,SAAQC,WAAW,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,OAAO,MAAMC,gBAAgB,gBAAGP,aAAa,CAAC,CAAC;AAC/C,OAAO,MAAMQ,wBAAwB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACC,OAAO,EAAEC,YAAY,CAAC;EAE3D,MAAMU,SAAS,GAAIC,KAAK,IAAK;IAC3BF,QAAQ,CAAC;MACPG,IAAI,EAAE,OAAO;MACbC,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAAC;MACPG,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE,CAACL,KAAK,CAACO;IAClB,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAAC,CAAC,CAAC,CAAC;MACtC,MAAMiB,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAEhC;MACAV,QAAQ,CAAC;QAACG,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEK;MAAQ,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,MAAME,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,UAAU,GAAGhB,KAAK,CAACU,QAAQ;IACjC,MAAMO,eAAe,GAAGD,UAAU,CAACE,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IACnE,IAAI,CAACH,eAAe,EAAE;MACpBD,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC;MACxBd,QAAQ,CAAC;QACPG,IAAI,EAAE,kBAAkB;QACxBC,OAAO,EAAEW;MACX,CAAC,CAAC;IACJ,CAAC,MAAM;MACLH,OAAO,CAACS,GAAG,CAAC,yCAAyC,CAAC;IACxD;EACF,CAAC;EAGD,MAAMC,KAAK,GAAG;IACZpB,KAAK,EAAEH,KAAK,CAACG,KAAK;IAClBO,QAAQ,EAAEV,KAAK,CAACU,QAAQ;IACxBH,IAAI,EAAEP,KAAK,CAACO,IAAI;IAChBL,SAAS;IACTI,WAAW;IACXQ,aAAa;IACbN;EAEF,CAAC;EACD,oBACCb,OAAA,CAACC,gBAAgB,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EACrCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE/B,CAAC;AAAA7B,EAAA,CA7DYF,wBAAwB;AAAAgC,EAAA,GAAxBhC,wBAAwB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}